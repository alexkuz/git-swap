#!/bin/sh

function find_module_path {
	PARENT_MODULE=$1
	MODULE=$2
	NPM_PATH="$(dirname $(dirname "$0"))"
	NPM_DIR="$(dirname $(dirname "$0") | xargs basename)"
	if [ $NPM_DIR = ".npm" ]; then
		NPM_ABS_SHELL_MENU_BIN_PATH="$NPM_PATH/lib/node_modules/$MODULE/bin"
		NPM_SHELL_MENU_BIN_PATH="$NPM_PATH/lib/node_modules/$PARENT_MODULE/node_modules/$MODULE/bin"
		YARN_SHELL_MENU_BIN_PATH="$HOME/.config/yarn/global/node_modules/$MODULE/bin"
		if [ -e $NPM_ABS_SHELL_MENU_BIN_PATH ]; then
			echo $NPM_ABS_SHELL_MENU_BIN_PATH
		elif [ -e $NPM_SHELL_MENU_BIN_PATH ]; then
			echo $NPM_SHELL_MENU_BIN_PATH
		elif [ -e $YARN_SHELL_MENU_BIN_PATH ]; then
			echo $YARN_SHELL_MENU_BIN_PATH
		fi
	else
		echo "."
	fi
}

function git_swap {
	MODULE_PATH=$(find_module_path git-swap shell-menu)
	source "$MODULE_PATH/__shell_menu.sh"

	if [[ $1 == *"*"* ]]; then
		pattern=$1
	else
		pattern="*$1*"
	fi

	branches=$(git for-each-ref "refs/heads/$pattern" --sort="-authordate" --format='"'"%(refname:strip=2)//    (%(authordate:relative)) \033[0m%(subject) \033[33mby %(authorname)\033[0m"'"' $@)

	eval "branches=($branches)"

	menu result "${branches[@]}"

	git checkout $result
}

if [[ ${BASH_SOURCE[0]} != $0 ]]; then
  export -f git_swap
else
  git_swap "${@}"
  exit $?
fi

